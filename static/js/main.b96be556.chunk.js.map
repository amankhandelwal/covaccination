{"version":3,"sources":["apis.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getRequest","path","data","pathWithParams","undefined","params","Object","keys","map","k","encodeURIComponent","join","fetch","then","response","json","getVaccinationForDistrictAndDate","district_id","date","useFilter","defaultValue","useState","enabled","setEnabled","condition","VaccineCenterView","vaccineCenter","checkUnder45Filter","checkAvailabilityFilter","name","block_name","pincode","fee_type","filteredSessions","sessions","filter","item","available_capacity","min_age_limit","className","style","width","fontSize","fontWeight","color","VaccineCenterSession","slots","isAvailableEmoji","under45Allowed","slot","App","dateformat","stateList","setStateList","districtList","setDistrictList","state_id","state_name","state","setState","district_name","district","setDistrict","vaccinationCenters","setVaccinationCenters","moment","format","useEffect","urlParams","URLSearchParams","window","location","search","get","states","getVaccinationForPincodeAndDate","centers","onSearch","a","filteredVaccineCenters","some","it","id","htmlFor","onChange","event","selected","find","target","value","districts","onClick","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b96be556.chunk.js","sourcesContent":["import {District, Districts, State, States, VaccinationCenters} from \"./models\";\n\ninterface KeyValueString {\n    [k: string]: string;\n}\n\nfunction getRequest<T>(path: string, data?: KeyValueString): Promise<T> {\n    let pathWithParams = path;\n    if (data !== undefined) {\n        const params = Object.keys(data).map(function (k) {\n            return encodeURIComponent(k) + '=' + encodeURIComponent(data[k])\n        }).join('&');\n        pathWithParams = `${path}?${params}`;\n    }\n    return fetch(pathWithParams)\n        .then(response => response.json() as unknown as T);\n}\n\n/**\n https://cdn-api.co-vin.in/api/v2/admin/location/states - Fetch States\n\n https://cdn-api.co-vin.in/api/v2/admin/location/districts/36 - Fetch Districts\n\n https://cdn-api.co-vin.in/api/v2/appointment/sessions/calendarByDistrict?district_id=730&date=02-05-2021 - fetch vaccination info\n\n https://cdn-api.co-vin.in/api/v2/appointment/sessions/calendarByPin?pincode=700136&date=02-05-2021 - by pincode\n\n */\n\nexport const getStates = () => getRequest<States>(\"https://cdn-api.co-vin.in/api/v2/admin/location/states\");\n\nexport const getDistrictsForState = (state_id: string) => getRequest<Districts>(\n    `https://cdn-api.co-vin.in/api/v2/admin/location/districts/${state_id}`\n);\n\nexport const getVaccinationForDistrictAndDate = (district_id: string, date: string) => getRequest<VaccinationCenters>(\n    \"https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByDistrict\",\n    {\n        district_id,\n        date\n    }\n);\n\nexport const getVaccinationForPincodeAndDate = (pincode: string, date: string) => getRequest<VaccinationCenters>(\n    \"https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByPin\",\n    {\n        pincode,\n        date\n    }\n);\n","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport {District, Session, State, VaccinationCenter} from \"./models\";\nimport {\n    getDistrictsForState,\n    getStates,\n    getVaccinationForDistrictAndDate,\n    getVaccinationForPincodeAndDate\n} from \"./apis\";\nimport moment from 'moment';\n\nconst useFilter = (\n    defaultValue: boolean\n): [boolean, React.Dispatch<React.SetStateAction<boolean>>, ((condition: boolean) => boolean)] => {\n    const [enabled, setEnabled] = useState<boolean>(defaultValue);\n    const checkConditionIfEnabled = (condition: boolean): boolean => {\n        if (enabled) {\n            return condition;\n        } else {\n            return true;\n        }\n    };\n    return [enabled, setEnabled, checkConditionIfEnabled]\n};\n\nfunction App() {\n    const dateformat = \"DD-MM-YYYY\";\n    const [stateList, setStateList] = useState<State[]>([]);\n    const [districtList, setDistrictList] = useState<District[]>([]);\n    const [state, setState] = useState<State>(\n        {state_id: '36', state_name: \"West Bengal\"}\n    );\n    const [district, setDistrict] = useState<District>(\n        {district_id: '730', district_name: \"North 24 Parganas\"}\n    );\n    const [vaccinationCenters, setVaccinationCenters] = useState<VaccinationCenter[]>([]);\n    const [date, setDate] = useState<string>(moment().format(dateformat));\n\n    const [under45Filter, setunder45Filter, checkUnder45Filter] = useFilter(false);\n    const [availabileFilter, setavailableFilter, checkAvailabilityFilter] = useFilter(true);\n\n    useEffect(() => {\n        const urlParams = new URLSearchParams(window.location.search);\n        const district_id = urlParams.get('district_id');\n        const pincode = urlParams.get('pincode');\n        const today = moment().format(dateformat);\n        getStates()\n            .then(data => setStateList(data.states));\n        if (pincode != null) {\n            getVaccinationForPincodeAndDate(pincode, date)\n                .then(data => setVaccinationCenters(data.centers));\n        }\n        if (district_id != null) {\n            getVaccinationForDistrictAndDate(district_id, date)\n                .then(data => setVaccinationCenters(data.centers));\n        }\n    }, []);\n\n    const onStateChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        const selected = stateList.find(item => item.state_id == event.target.value);\n        if (selected != undefined && selected.state_id !== state.state_id) {\n            setState(selected);\n            getDistrictsForState(selected.state_id)\n                .then(item => setDistrictList(item.districts));\n        }\n    };\n\n    const onDistrictChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        const selected = districtList.find(item => item.district_id == event.target.value);\n        if (selected !== undefined && selected.district_id !== district.district_id) {\n            setDistrict(selected);\n        }\n    };\n\n    const onSearch = async () => {\n        if (district) {\n            const date = moment().format(dateformat);\n            getVaccinationForDistrictAndDate(district.district_id, date)\n                .then(data => setVaccinationCenters(data.centers));\n        }\n    };\n\n    const filteredVaccineCenters = vaccinationCenters\n        .filter(item => checkAvailabilityFilter(\n            item.sessions.some(it => it.available_capacity > 0\n            )))\n        .filter(item => checkUnder45Filter(\n            item.sessions.some(it => it.min_age_limit < 45\n            )));\n\n    return (\n        <div className=\"App flexColumn\">\n            <header className={\"flexRow\"}>\n                <div className={\"flexColumn flexCenter\"}>\n                    <p id={\"title\"}>COVID VACCINES 💉</p>\n                    <p id={\"subtitle\"}>Check your nearest vaccine centers and slot availability</p>\n                </div>\n            </header>\n            <div className={'search flexColumn spaceAround'}>\n                <div className={'select-container'}>\n                    <label htmlFor=\"states\">Select State:</label>\n                    <select name={\"states\"} onChange={onStateChange}>\n                        {stateList.map(item => <option value={item.state_id}>{item.state_name}</option>)}\n                    </select>\n                </div>\n                <div className={'select-container'}>\n                    <label htmlFor=\"districts\">Select District:</label>\n                    <select name={\"districts\"} onChange={onDistrictChange}>\n                        {districtList.map(item => <option value={item.district_id}>{item.district_name}</option>)}\n                    </select>\n                </div>\n                <button onClick={onSearch}>Search</button>\n            </div>\n            <div className={\"flexColumn list-container\"}>\n                {filteredVaccineCenters.length > 0 ? (\n                    filteredVaccineCenters\n                        .map(item => <VaccineCenterView\n                            vaccineCenter={item}\n                            checkAvailabilityFilter={checkAvailabilityFilter}\n                            checkUnder45Filter={checkUnder45Filter}/>)\n                ) : (<div className={'error'}>No Results found</div>)}\n            </div>\n        </div>\n    );\n}\n\ninterface VaccineCenterViewProps {\n    vaccineCenter: VaccinationCenter;\n    checkUnder45Filter: (condition: boolean) => boolean;\n    checkAvailabilityFilter: (condition: boolean) => boolean;\n\n}\n\nconst VaccineCenterView = ({vaccineCenter, checkUnder45Filter, checkAvailabilityFilter}: VaccineCenterViewProps) => {\n    const {name, block_name, pincode, fee_type, sessions} = vaccineCenter;\n    const filteredSessions = sessions\n        .filter(item => checkAvailabilityFilter(item.available_capacity > 0))\n        .filter(item => checkUnder45Filter(item.min_age_limit < 45))\n    return (\n        <div className={'flexColumn flexStart flex1 vaccine-center'}>\n            <div className={'flexRow spaceBetween flex1'} style={{width: '100%'}}>\n                <p style={{fontSize: 16, fontWeight: 'bold'}}>{name}</p>\n                <p style={{fontSize: 16, fontWeight: 'bold', color: 'red'}}>{fee_type}</p>\n            </div>\n            <p style={{fontSize: 12, color: '#2F2F2F'}}>{block_name} ( {pincode} )</p>\n            {filteredSessions.map(item => <VaccineCenterSession {...item} />)}\n        </div>\n    );\n}\n\nconst VaccineCenterSession = ({min_age_limit, available_capacity, slots, date}: Session) => {\n    const isAvailableEmoji = available_capacity > 0 ?\n        <p className={'availableSlot'}>{`${available_capacity} Slots ✅`}</p>\n        : <p className={'notAvailableSlot'}>{\"Not Available ❌\"}</p>;\n\n    const under45Allowed = min_age_limit < 45 ? \"👦🏻\" : \"🧓🏼\";\n    return (\n        <div className=\"vaccine-session flexColumn flexStart\">\n            <div className={'flexRow spaceBetween flex1'} style={{width: '100%'}}>\n                <p style={{fontSize: 12, fontWeight: 'bold'}}>{date} {under45Allowed}</p>\n                {isAvailableEmoji}\n            </div>\n            <div className={'flexRow vaccine-slot'}>\n                {slots.map(slot => <p className={'slotTime'}>{slot}</p>)}\n            </div>\n        </div>\n    )\n};\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}